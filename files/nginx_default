# SSL VirtualHost
server {
    # SSL Listen port
    listen 443 ssl;

    server_name www.example.com test.example.com;

    # Certificates
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_session_cache shared:ssl_session_cache:1M;
    ssl_session_timeout 60m;

    # Security options
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-DES-CBC3-SHA ECDHE-RSA-AES128-SHA ECDHE-RSA-AES256-SHA ECDHE-RSA-DES-CBC3-SHA DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA EDH-RSA-DES-CBC3-SHA AES128-GCM-SHA256 AES256-GCM-SHA384 AES128-SHA AES256-SHA DES-CBC3-SHA";
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # nginx 1.4 or newer
    # works only with official certs
    # http://freiburg79.de/ocsp-stapling-mit-nginx/
    #ssl_stapling on;

    # HSTS policies are persistent; learn more about HSTS
    # before enabling the following rule for best security.
    # https://hstspreload.appspot.com
    add_header Strict-Transport-Security "max-age=31536000;includeSubDomains";

    # Proxy Pass to Varnish
    # Add headers to recognize SSL
    location / {
        proxy_pass  http://127.0.0.1:6081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Secure on;
    }
}

# non SSL VirtualHost
server {

    listen 80;

    server_name .example.com;

    # rewrite all non SSL traffic to SSL
    rewrite ^(.*) https://$host$request_uri permanent;
}

# force www.example.com instead of example.com
server {

  listen 443 ssl;

  server_name example.com;

  # Certificates
  ssl_certificate /etc/nginx/ssl/server.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key;

  ssl_session_cache shared:ssl_session_cache:1M;
  ssl_session_timeout 60m;

  # Security options
  ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-DES-CBC3-SHA ECDHE-RSA-AES128-SHA ECDHE-RSA-AES256-SHA ECDHE-RSA-DES-CBC3-SHA DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA EDH-RSA-DES-CBC3-SHA AES128-GCM-SHA256 AES256-GCM-SHA384 AES128-SHA AES256-SHA DES-CBC3-SHA";
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  # nginx 1.4 or newer
  ssl_stapling on;

  # HSTS policies are persistent; learn more about HSTS
  # before enabling the following rule for best security.
  add_header Strict-Transport-Security "max-age=31536000;includeSubDomains";

  rewrite ^/(.*) https://www.example.com/$1 permanent;
}

# VirtualHost #1
server {
    listen 127.0.0.1:8080;

    server_name www.example.com;
    root /var/www/www.example.com;
    index index.php;

    set_real_ip_from   127.0.0.1;
    real_ip_header     X-Forwarded-For;
    real_ip_recursive on;

    access_log /var/log/nginx/www.example.com_access.log;
    error_log /var/log/nginx/www.example.com_error.log;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri  =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
    }
}

# VirtualHost #2
server {
    listen 127.0.0.1:8090;

    server_name test.example.com;
    root /var/www/test.example.com;
    index index.php;

    set_real_ip_from   127.0.0.1;
    real_ip_header     X-Forwarded-For;
    real_ip_recursive on;

    access_log /var/log/nginx/test.example.com_access.log;
    error_log /var/log/nginx/test.example.com_error.log;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri  =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
    }
}
